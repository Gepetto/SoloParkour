# used to create the object
name: SoloParkour

physics_engine: "physx"

env:
  numEnvs: ${resolve_default:4096,${...num_envs}}
  numActions: 12
  numLatent: 0 # (8, 3, 3)
  numHistorySamples: 1 # t-1, t-4, t-7
  numHistoryStep: 0 # t-1 -> t-4 -> t-7
  envSpacing: 3. # [m]
  enableDebugVis: False
  enableDebugPlots: False
  enableJoystick: False
  onlyForwards: False
  onlyForwardsVelocity: 1.0
  startAtLevel: -1

  terrain:
    terrainType: trimesh # none, plane, or trimesh
    staticFriction: 1.0 # [-]
    dynamicFriction: 1.0 # [-]
    restitution: 0. # [-]
    # rough terrain only:
    curriculum: true
    maxInitMapLevel: 0
    minInitMapLevel: 0
    mapLength: 8.
    mapWidth: 4.
    numLevels: 10
    numTerrains: 20

    # tri mesh only:
    slopeTreshold: 0.2

    terrainProportions: # Proportions for each kind of terrain
      gap_parkour: 0.55
      jump_parkour: 0.3
      stairs_parkour: 0.0
      hurdle_parkour: 0.1
      crawl_parkour: 0.05
      random_uniform: 0.0

  baseInitState:
    pos: [0.0, 0.0, 0.3] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0] # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0] # x,y,z [rad/s]

  randomCommandVelocityRanges:
    # train
    linear_x: [0.0, 1.5] # min max [m/s] # -0.3 1.0
    linear_y: [-0.5, 0.5] # min max [m/s]
    yaw: [-0.78, 0.78] # min max [rad/s]

  control:
    # PD Drive parameters:
    stiffness: 4.0 # [N*m/rad]
    damping: 0.2 # [N*m*s/rad]
    # action scale: target angle = actionScale * action + defaultAngle
    actionScale: 0.5
    # decimation: Number of control action updates @ sim DT per policy DT
    decimation: 4
    damping_curriculum:
      enable: False
      num_steps: 400000
      init_damping: 0.05

  defaultJointAngles: # = target angles when action = 0.0
    FL_HAA: 0.05 # [rad]
    HL_HAA: 0.05 # [rad]
    FR_HAA: -0.05 # [rad]
    HR_HAA: -0.05 # [rad]

    FL_HFE: 0.6 # [rad]
    HL_HFE: 0.6 # [rad]
    FR_HFE: 0.6 # [rad]
    HR_HFE: 0.6 # [rad]

    FL_KFE: -1.2 # [rad]
    HL_KFE: -1.2 # [rad]
    FR_KFE: -1.2 # [rad]
    HR_KFE: -1.2 # [rad]

  urdfAsset:
    file: "solo12/solo12_mpi.urdf"
    baseName: base_link
    footName: FOOT
    shinName: LOWER
    kneeName: UPPER
    collapseFixedJoints: True
    fixBaseLink: false
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)
    flip_visual_attachments: False
    armature: 0.00036207 # i.e motor inertia at joint level

  learn:
    allowShinContacts: True
    allowKneeContacts: false
  
    # Scales of rewards
    rewMult: 1.0
    survivalBonus: 0.5

    # Misc quantities for rewards
    linearVelocityXYRewardDelta: 0.25
    angularVelocityZRewardDelta: 0.25
    feetAirTimeRewardTarget: 0.25

    # Constraints
    enableConstraints: "cat"  # "none", "cat"
    constraints_CaT:
      feetAirTimeConstraint: 0.2
      tauConstraint: 0.95
      minPConstraint: 0.0
      softPConstraint: 0.1
      useSoftPCurriculum: True
      trackingConstraint: 1000.0

    limits:
      torque: 3.0
      acc: 800.0
      vel: 16.0
      action_rate: 80.0
      base_orientation: 0.1
      foot_contact_force: 80.0
      HFE: 1.9
      HFE_min: -0.2
      HAA: 0.2
      min_base_height: 0.06
      heading: 0.1

    # Other
    flatTerrainThreshold: 0.001
    vel_deadzone: 0.2
    base_height_target: 0.245
    gait_period: 0.4

    # observations
    observe:
      base_lin_vel: false
      base_ang_vel: true
      commands: true
      misc: true
      heights: true 
      ceilings: true
      phases: false
      imu: false
    measured_points_step: 0.08
    measured_points_x: [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    measured_points_y: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]
    phases_freq: 2.0

    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05
    heightMeasurementScale: 5.0
    imuAccelerationScale: 0.1

    # noise
    addNoise: true
    noiseLevel: 1.0 # scales other values
    dofPositionNoise: 0.01
    dofVelocityNoise: 0.2
    linearVelocityNoise: 0.0
    angularVelocityNoise: 0.001
    gravityNoise: 0.05
    heightMeasurementNoise: 0.01

    # friction randomization
    randomizeFriction: true
    frictionRange: [0.5, 1.25]

    # random pushes during training
    pushRobots: true
    pushInterval_s: 8

    # episode length in seconds
    episodeLength_s: 15

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [0, 0, 5] # [m]
    lookat: [1., 1, 4.5] # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False
  depth:
    use_depth: False
    position: [0.24, 0, 0.03] # [0.21, 0, 0.03]
    angle: [-5, 5]
    update_interval: 5
    image_size: [48, 85] # [58, 87]
    depth_clip_max: 1.0
    depth_clip_min: 0.04
    horizontal_fov: 87

sim:
  dt: 0.005
  substeps: 1
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: 0 # ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 33554432 # 8388608 = 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
